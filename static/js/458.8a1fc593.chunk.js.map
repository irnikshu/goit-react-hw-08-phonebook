{"version":3,"file":"static/js/458.8a1fc593.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/register-form.module.scss?ac18","components/RegisterForm/initialState.js","components/RegisterForm/fields.js","components/RegisterForm/RegisterForm.jsx","components/Pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/button.jsx","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.scss?a1c3","shared/components/TextField/TextField.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__bzcga\"};","const initialState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n};\n\nexport default initialState;","const fields = {\n    name: {\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        label: \"User name\",\n        placeholder: \"User name\",\n    },\n    email: {\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        label: \"User email\",\n        placeholder: \"User email\",\n    },\n    password: {\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        label: \"User password\",\n        placeholder: \"User password\",\n    },\n};\n\nexport default fields;","import styles from './register-form.module.scss';\nimport useForm from '../../shared/hooks/useForm';\nimport initialState from './initialState';\nimport TextField from '../../shared/components/TextField/TextField';\nimport fields from './fields';\nimport Button from '../../shared/components/Button/button';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Register</Button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { authSignUp } from '../../../redux/auth/auth-operation';\n\nimport { useDispatch } from 'react-redux';\n\nimport RegisterForm from '../../../components/RegisterForm/RegisterForm';\n\nimport { Box } from '@mui/material';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const handleSignUp = data => {\n    dispatch(authSignUp(data));\n  };\n\n  return (\n    <Box\n      sx={{\n        \n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        marginTop: '40px',\n      }}\n    >\n      <RegisterForm onSubmit={handleSignUp} />\n    </Box>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__uXPTj\"};","import styles from './button.module.scss';\n\nconst Button = ({ children, type = 'submit' }) => {\n  return (\n    <button type={type} className={styles.btn}>\n      {children}\n    </button>\n  );\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"text-field_wrapper__Y6TVN\",\"field\":\"text-field_field__q+3UI\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './text-field.module.scss';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div className={styles.wrapper}>\n      <label htmlFor={id}>{label}</label>\n      <input\n        className={styles.field}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value, checked, type } = target;\n      const newValue = type === 'checkbox' ? checked : value;\n\n      return { ...prevState, [name]: newValue };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;"],"names":["name","email","password","type","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","TextField","value","fields","dispatch","useDispatch","Box","sx","justifyContent","alignItems","display","marginTop","data","authSignUp","children","props","source","excluded","key","i","target","objectWithoutPropertiesLoose","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","useState","setState","prevState","checked","newValue","e","preventDefault"],"sourceRoot":""}